name: Vercel Preview Deployment

description: Deploy to Vercel and set the preview URL

inputs:
  project_name:
    description: "The working directory/project name you're trying to deploy. Example: 'www', 'blog'"
    required: true
  NODE_ENV:
    description: "Vercel takes care of this"
    required: true
  VERCEL_TOKEN:
    description: "Vercel token for authentication"
    required: true
  GITHUB_TOKEN:
    description: "GitHub toaken"
    required: true

runs:
  using: "composite"
  steps:
    - name: Deploy to Vercel
      shell: bash
      run: |
        if [ "${{ inputs.NODE_ENV }}" == "preview" ]; then
          cd apps/${{ inputs.project_name }} && \
          PREVIEW_URL=$(pnpm --filter @ashgw/${{ inputs.project_name }} deploy:vercel-preview --token=${{ inputs.VERCEL_TOKEN }} | grep -Eo 'https?://[^ ]+')
          echo "PREVIEW_URL=$PREVIEW_URL" >> $GITHUB_ENV
        else
          cd apps/${{ inputs.project_name }} && \
          pnpm --filter @ashgw/${{ inputs.project_name }} deploy:vercel-prod --token=${{ inputs.VERCEL_TOKEN }}
        fi

    - name: Notify mfs about the deployment URL
      if: ${{ inputs.NODE_ENV == 'preview' }}
      uses: actions/github-script@v6
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
        PROJECT_NAME: ${{ inputs.project_name }}
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## 🚀 Preview Deployment Ready! 

            ### ✨ Project: \`${process.env.PROJECT_NAME}\`
            
            🔍 **Preview URL:** [Check it out here](${process.env.PREVIEW_URL})
            
            ---
            
            > 💡 This preview environment reflects the changes in this PR. And deploys this version of the app as soons as the "ready-for-preview" label is added`
          })
